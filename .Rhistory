shiny::runApp()
library(easypackages)
libraries("shiny","shinydashboard","tidyverse")
libraries("shiny","shinydashboard","tidyverse","wordcloud","wordcloud2","skimr")
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
View(medicalPractitioners)
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN)
rm(medicalPractitioners)
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(Name = FULL_NAMES,
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
medicalPractitioners$`Year Range` = cut(medicalPractitioners$Year, c(1970, 1980, 1990, 2000, 2010, 2020, 2025))
levels(medicalPractitioners$`Year Range`) = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020","2021")
medicalPractitioners$`Year Range` <- factor(medicalPractitioners$`Year Range`, ordered = T, levels = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020"))
View(medicalPractitioners)
rm(medicalPractitioners)
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
str(medicalPractitioners)
rm(medicalPractitioners)
libraries("shiny","shinydashboard","tidyverse","wordcloud","wordcloud2","skimr","lubridate")
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
View(medicalPractitioners)
rm(medicalPractitioners)
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN)
medicalPractitioners
View(medicalPractitioners)
medicalPractitioners$`Registration Date` <- dmy(medicalPractitioners$`Registration Date`)
str(medicalPractitioners)
rm(medicalPractitioners)
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners$RegDate <- dmy(medicalPractitioners$RegDate)
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
medicalPractitioners$`Year Range` = cut(medicalPractitioners$Year, c(1970, 1980, 1990, 2000, 2010, 2020, 2025))
levels(medicalPractitioners$`Year Range`) = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020","2021")
medicalPractitioners$`Year Range` <- factor(medicalPractitioners$`Year Range`, ordered = T, levels = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020"))
View(medicalPractitioners)
runApp()
speciality <- medicalPractitioners %>%
select(Specialty) %>%
group_by(Specialty) %>%
summarise(count = n())
speciality
wordcloud(words = speciality$Specialty, freq = speciality$count, min.freq = 1,
max.words = 1000, random.order = F, rot.per = 0.35)
warnings()
wordcloud(words = speciality$Specialty, freq = speciality$count, min.freq = 1,
max.words = 8000, random.order = F, rot.per = 0.35, colors=brewer.pal(8, "Dark2"))
wordcloud(words = speciality$Specialty, freq = speciality$count, min.freq = 1,
max.words = 8000, random.order = F, rot.per = 0.35,
colors=brewer.pal(10, "Dark2"))
wordcloud(words = speciality$Specialty, freq = speciality$count, min.freq = 1,
max.words = 8000, random.order = F, rot.per = 0.35,
colors=brewer.pal(8, "Dark2"))
subSpecialty <- medicalPractitioners %>%
select(`Sub Specialty`) %>%
group_by(`Sub Specialty`) %>%
summarise(count = n())
wordcloud(words = subSpecialty$`Sub Specialty`, freq = subSpecialty$count, min.freq = 1,
max.words = 8000, random.order = F, rot.per = 0.35,
colors=brewer.pal(8, "Dark2"))
rm(speciality)
rm(subSpecialty)
shiny::runApp()
install.packages("semantic.dashboard")
shiny::runApp()
install.packages("shinydashboardplus")
install.packages("shinydashboardPlus")
runApp()
# Define UI for application that draws a histogram
ui <- fluidPage(
dashboardPage(
dashboardHeader(
title = "KMPDC Medical Practitioners Analysis",
),
dashboardSidebar(),
dashboardBody()
)
)
runApp()
shiny::runApp()
libraries("shiny","shinydashboard","tidyverse","wordcloud","wordcloud2","skimr","lubridate", "plotly")
libraries("shiny","shinydashboard","tidyverse","lubridate", "plotly")
library(easypackages)
libraries("shiny","shinydashboard","tidyverse","lubridate", "plotly")
runApp()
theme_set(theme_minimal())
to_factor <- c("Specialty","Sub Specialty","Number of Qualifications","Town")
for (col in to_factor) {
medicalPractitioners[[col]] <- as.factor(as.character(medicalPractitioners[[col]]))
}
medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n()) %>%
ggplot(aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.3,
nudge_y = 0.9,
size=5)
medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n()) %>%
ggplot(aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.1,
nudge_y = 0.2,
size=5)
medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n()) %>%
ggplot(aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.1,
nudge_y = 0.2,
size=5)
runApp()
medicalPractitioners  %>%
count(Specialty, sort = T) %>%
filter(n>20) %>%
ggplot(aes(reorder(Specialty, n), n)) +
geom_col(aes(fill=Specialty)) +
coord_flip() +
scale_fill_brewer(palette = "Paired") +
labs(title = "Top Specialties of Medical Practitioners",
subtitle = "Data from 1978 to 2020",
caption = "Source:https://medicalboard.co.ke/DashBoard.php ",
x="", y="count") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
legend.title = element_blank(),
legend.position = "none"
) +
geom_label(aes(label=n),
nudge_x = 0.15,
nudge_y = 0.9,
size=4)
medicalPractitioners  %>%
count(Specialty, sort = T) %>%
filter(n>20) %>%
ggplot(aes(reorder(Specialty, n), n)) +
geom_col(aes(fill=Specialty)) +
coord_flip() +
scale_fill_brewer(palette = "Paired") +
labs(title = "Top Specialties of Medical Practitioners",
subtitle = "Data from 1978 to 2020",
caption = "Source:https://medicalboard.co.ke/DashBoard.php ",
x="", y="count") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
legend.title = element_blank(),
legend.position = "none"
) +
geom_label(aes(label=n),
nudge_x = 0.15,
nudge_y = 0.9,
size=4)
medicalPractitioners  %>%
count(Specialty, sort = T) %>%
filter(n>20) %>%
ggplot(aes(reorder(Specialty, n), n)) +
geom_col(aes(fill=Specialty)) +
coord_flip() +
labs(title = "Top Specialties of Medical Practitioners",
subtitle = "Data from 1978 to 2020",
caption = "Source:https://medicalboard.co.ke/DashBoard.php ",
x="", y="count") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
legend.title = element_blank(),
legend.position = "none"
) +
geom_label(aes(label=n),
nudge_x = 0.15,
nudge_y = 0.9,
size=4)
runApp()
medicalPractitioners  %>%
count(`Sub Specialty`, sort = T) %>%
filter(n>10) %>%
ggplot(aes(reorder(`Sub Specialty`, n), n)) +
geom_col(aes(fill=`Sub Specialty`)) +
coord_flip() +
scale_fill_brewer(palette = "Paired") +
labs(title = "Top Sub-Specialties of Medical Practitioners",
subtitle = "Data from 1978 to 2020",
caption = "Source:https://medicalboard.co.ke/DashBoard.php ",
x="", y="count") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
legend.title = element_blank(),
legend.position = "none"
) +
geom_label(aes(label=n),
nudge_x = 0.15,
nudge_y = 0.9,
size=5)
runApp()
town <- unique(medicalPractitioners$Town)
town <- unique(medicalPractitioners$Town)
town
town <- unique(medicalPractitioners$Town)
library(easypackages)
libraries("shiny","shinydashboard","tidyverse","lubridate", "plotly")
theme_set(theme_minimal())
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
rm(medicalPractitioners)
# Dataset
medicalPractitioners <- read.csv("Data/MedicalPractitioners.csv")
medicalPractitioners$RegDate <- dmy(medicalPractitioners$RegDate)
medicalPractitioners <- medicalPractitioners %>%
select(RegDate, SPECIALTY, SUB_SPECIALTY, Qualification.Count, TOWN) %>%
rename(
`Registration Date` = RegDate,
Specialty = SPECIALTY,
`Sub Specialty` = SUB_SPECIALTY,
`Number of Qualifications` = Qualification.Count,
Town = TOWN) %>%
dplyr::mutate(Year = lubridate::year(`Registration Date`))
medicalPractitioners$`Year Range` = cut(medicalPractitioners$Year, c(1970, 1980, 1990, 2000, 2010, 2020, 2025))
levels(medicalPractitioners$`Year Range`) = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020","2021")
medicalPractitioners$`Year Range` <- factor(medicalPractitioners$`Year Range`, ordered = T, levels = c("1970-1980", "1981-1990", "1991-2000","2001-2010", "2011-2020"))
# Function for converting to Factors
to_factor <- c("Specialty","Sub Specialty","Number of Qualifications","Town")
for (col in to_factor) {
medicalPractitioners[[col]] <- as.factor(as.character(medicalPractitioners[[col]]))
}
# Plots ####
town <- unique(medicalPractitioners$Town)
town
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app2.R')
library(plotly)
library(tidyverse)
library(shiny)
library(DT)
library(shinydashboard)
library(plotly)
library(tidyverse)
branch <- c("North", "South","South","North","North","South","North")
cars <- c("Toyota","Nissan","BMW","Nissan","Ford","Toyota","Nissan")
insured <- c("Yes","Yes","No","Yes","Yes","Yes","No")
price <- c(21000, 23400, 26800,21000, 23400, 26800,21000)
salesDF <- data.frame(branch, cars,insured, price)
ggplot(salesDF, aes(Branch, insured)) +
geom_bar()
ggplot(salesDF, aes(branch, insured)) +
geom_bar()
ggplot(salesDF, aes(branch, insured)) +
geom_bar(stat = "identity")
runApp('app2.R')
runApp('app2.R')
runApp()
runApp()
runApp('app2.R')
countmP <- medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n())
countmP <- medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n())
countmP
View(medicalPractitioners)
countmP <- medicalPractitioners %>%
select(`Year Range`, Town) %>%
group_by(`Year Range`,Town) %>%
summarise(count = n())
countmP
ggplot(countmP,aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.1,
nudge_y = 0.2,
size=5)
dev.off()
ggplot(countmP,aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.1,
nudge_y = 0.2,
size=5)
medicalPractitioners %>%
group_by(`Year Range`) %>%
summarise(count = n()) %>%
ggplot(aes(`Year Range`, count)) +
geom_line(aes(group = 1),color="#aa2b1d", size=1) +
geom_point(size=4, color="#28527a") +
labs(title = "Count of Medical Practitioners in Kenya",
subtitle = "Data from 1978 to 2020",
caption = "Source: medicalboard.co.ke",
x="") +
theme(
plot.title = element_text(color = "#23689b", size = 20, face = "bold",hjust = 0.5),
plot.subtitle = element_text(color = "#161d6f", size = 13, face = "bold",hjust = 0.5),
plot.caption = element_text(color = "#0f1123", size = 10, face = "italic"),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12)
) +
geom_label(aes(label=count),
nudge_x = 0.1,
nudge_y = 0.2,
size=5)
runApp()
runApp()
runApp()
runApp()
runApp('app2.R')
shiny::runApp()
shiny::runApp()
